{% include 'header' %}

import UIKit

// MARK: - {{ prefix }}{{ module_info.name }}ContentManager

class {{ prefix }}{{ module_info.name }}ContentManager: NSObject {
    
    var delegate: {{ prefix }}{{ module_info.name }}ContentManagerDelegate?

    private var tableView: UITableView? {

        didSet {

            if let tableView = tableView {

                tableView.dataSource = dataSource(for: tableView)
                tableView.delegate = delegate(for: tableView)
            }
        }
    }

    func configure(withTableView tableView: UITableView) {

        self.tableView = tableView
    }
}

// MARK: - ContentManager

extension {{ prefix }}{{ module_info.name }}ContentManager: ContentManager {
    
    func dataSource(for tableView: UITableView) -> UITableViewDataSource {
        
        return self
    }
    
    func delegate(for tableView: UITableView) -> UITableViewDelegate {
        
        return self
    }
}

// MARK: - UITableViewDelegate

extension {{ prefix }}{{ module_info.name }}ContentManager: UITableViewDelegate {
    
    
}

// MARK: - UITableViewDataSource

extension {{ prefix }}{{ module_info.name }}ContentManager: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        fatalError()
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        fatalError()
    }
}