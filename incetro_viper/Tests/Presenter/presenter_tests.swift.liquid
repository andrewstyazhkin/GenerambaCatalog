{% include 'header' %}

@testable
import {{ custom_parameters.project_name }}
import XCTest

// MARK: - {{ prefix }}{{ module_info.name }}PresenterTest

class {{ prefix }}{{ module_info.name }}PresenterTest: XCTestCase {

    let view       = MockViewController()
    let interactor = MockInteractor()
    let router     = MockRouter()
    
    let presenter = {{ prefix }}{{ module_info.name }}Presenter()
    
    override func setUp() {
        
        presenter.interactor = interactor
        presenter.router     = router
        presenter.view       = view
    }

    func testThatSetupInitialStateWillBeCalled() {
        
        // given
        
        view.setupInitialStateDidCall = false
        
        // when
        
        presenter.didTriggerViewReadyEvent()
        
        // then
        
        XCTAssertTrue(view.setupInitialStateDidCall)
    }

    // MARK: - MockInteractor

    class MockInteractor: {{ prefix }}{{ module_info.name }}InteractorInput {

    }

    // MARK: - MockRouter

    class MockRouter: {{ prefix }}{{ module_info.name }}RouterInput {

        var closeDidCall = false
        
        func close() {
            
            closeDidCall = true
        }
    }

    // MARK: - MockViewController

    class MockViewController: {{ prefix }}{{ module_info.name }}ViewInput {

        var setupInitialStateDidCall = false
        
        func setupInitialState() {

            setupInitialStateDidCall = true
        }
    }
}
